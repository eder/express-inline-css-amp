{"version":3,"sources":["../src/index.js"],"names":["NODE_ENV","process","env","InlineCSSAMP","constructor","CSSPathBase","CSSFilePath","CSSMinify","fileByRoutes","outFile","version","verify","generateCSS","view","Promise","resolve","reject","map","route","options","file","outputStyle","sass","render","err","result","console","error","fs","writeFile","css","readCSS","log","readFile","run","existsSync","response","tagStyle","html","content","er","test","replace","module","exports","object","inlinecss","req","res","next","renderCallback","then","send","Render","renders","callback"],"mappings":"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","sourcesContent":["import fs from 'fs';\nimport sass from 'node-sass';\n\nconst NODE_ENV = process.env.NODE_ENV;\n\nexport class InlineCSSAMP {\n  constructor({\n    CSSPathBase,\n    CSSFilePath,\n    CSSMinify = true,\n    fileByRoutes,\n    outFile,\n    version,\n  }) {\n    this.CSSFilePath = CSSFilePath;\n    this.CSSMinify = CSSMinify;\n    this.CSSPathBase = CSSPathBase;\n    this.outFile = outFile || `/tmp/generate-by-express-inline-css-amp-${version}.css`;\n    this.version = version;\n    this.fileByRoutes = fileByRoutes;\n  }\n\n  verify() {\n    if (!this.CSSFilePath) {\n      throw \"You need add a file in CSSFilePath param\";\n   }\n  }\n\n  generateCSS(view) {\n    return new Promise((resolve, reject) => {\n      this.fileByRoutes.map(route => {\n        this.outFile = `${this.CSSPathBase}prod/${route}`;\n        this.CSSFilePath =  `${this.CSSPathBase}${route}`;\n        let options = {\n          file: this.CSSFilePath,\n          outFile: this.outFile,\n          outputStyle: this.CSSMinify ? 'compressed' : '',\n        }\n        try {\n          sass.render(options, (err, result) => {\n            if(err) {\n              console.error(err);\n              return reject(err);\n            }\n            fs.writeFile(this.outFile, result.css, function(err){\n            });\n          });\n        }\n        catch(err) {\n          throw err\n        }\n        resolve();\n      });\n    })\n  }\n  \n  readCSS(view) {\n    console.log(view, 'Route');\n    return new Promise((resolve, reject) => {\n      try {\n        fs.readFile(`${this.CSSPathBase}prod/${view}.scss`, 'utf8', (err, file) => {\n          return resolve(file)\n        })\n      }\n      catch(err) {\n        throw err\n      }\n    })\n  }\n  \n  async run (view) {\n    if (NODE_ENV && NODE_ENV != 'development' && fs.existsSync(`${this.CSSPathBase}prod/${view}.scss`)) {\n      return this.readCSS(view);\n    }\n    let response = await this.generateCSS(view)\n    return this.readCSS(view);\n\n  }\n\n  tagStyle(html, content) {\n    const er = /(<\\/head>)/i;\n    if (!er.test(html)) return html;\n    return html.replace(er, `<style amp-custom>${content}</style>$1`);\n  }\n}\n\nmodule.exports = object => {\n  const inlinecss = new InlineCSSAMP(object);\n  const render = (req, res, next) => {\n    const renderCallback = function(view)  {\n     \n      return function (err, html) {\n        inlinecss.run(view).then(content => {\n          console.log(content, \"CONTENT\");\n          res.send(inlinecss.tagStyle(html,content));\n        })\n      }\n    }\n\n    res.Render = res.render\n    res.render = function (view, renders, callback) {\n      this.Render(view, renders, renderCallback(view))\n    }\n\n    return next()\n  }\n\n  return render;\n\n}\n\n"],"file":"index.js"}